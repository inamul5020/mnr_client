# Stable Dockerfile - Based on v1.2.3 working version
# This approach builds the frontend locally and just serves the static files

FROM nginx:alpine

# Install wget for health checks
RUN apk add --no-cache wget

# Copy pre-built application (assumes dist/ folder exists)
COPY dist/ /usr/share/nginx/html

# Copy nginx configuration (no API proxy - frontend handles API calls directly)
COPY nginx.stable.conf /etc/nginx/nginx.conf

# Create nginx user and set permissions
RUN addgroup -g 1001 -S nginx && \
    adduser -S -D -H -u 1001 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx

# Set proper permissions
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx && \
    chown -R nginx:nginx /etc/nginx/conf.d

# Switch to nginx user
USER nginx

# Expose port
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:80/ || exit 1

CMD ["nginx", "-g", "daemon off;"]
