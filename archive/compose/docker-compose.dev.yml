version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: mnr-client-db-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: mnr_client_intake
      POSTGRES_USER: mnr_user
      POSTGRES_PASSWORD: mnr_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mnr_user -d mnr_client_intake"]
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - "environment=development"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: mnr-client-backend-dev
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - DATABASE_URL=postgresql://mnr_user:mnr_password@postgres:5432/mnr_client_intake
      - NODE_ENV=development
      - PORT=3001
      - CORS_ORIGIN=http://localhost:3003
      - JWT_SECRET=dev-jwt-secret-key
    depends_on:
      postgres:
        condition: service_healthy
    labels:
      - "environment=development"
      - "port=3001"
      - "healthcheck=/health"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mnr-client-frontend-dev
    restart: unless-stopped
    ports:
      - "3003:80"
    environment:
      - VITE_API_URL=http://localhost:3001
    depends_on:
      - backend
    labels:
      - "environment=development"
      - "port=3003"

volumes:
  postgres_data_dev:
    driver: local
