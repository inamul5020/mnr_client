# Coolify-specific Docker Compose configuration (Robust Version)
# This version is more resilient to startup issues

version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: mnr-client-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=mnr_client_intake
      - POSTGRES_USER=mnr_user
      - POSTGRES_PASSWORD=mnr_password
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mnr_user -d mnr_client_intake || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 30s
    labels:
      - "coolify.managed=true"
      - "coolify.name=mnr-client-db"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: mnr-client-backend
    restart: unless-stopped
    expose:
      - "3001"
    environment:
      - DATABASE_URL=postgresql://mnr_user:mnr_password@postgres:5432/mnr_client_intake
      - NODE_ENV=production
      - PORT=3001
      - CORS_ORIGIN=https://client.mnrlk.com
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - DATABASE_RETRY_ATTEMPTS=10
      - DATABASE_RETRY_DELAY=5000
    depends_on:
      - postgres
    restart: unless-stopped
    labels:
      - "coolify.managed=true"
      - "coolify.name=mnr-client-backend"
      - "coolify.port=3001"
      - "coolify.healthcheck=/health"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mnr-client-frontend
    restart: unless-stopped
    expose:
      - "80"
    environment:
      - VITE_API_URL=https://api.mnrlk.com
    depends_on:
      - backend
    restart: unless-stopped
    labels:
      - "coolify.managed=true"
      - "coolify.name=mnr-client-frontend"
      - "coolify.port=80"
      - "coolify.healthcheck=/"

volumes:
  postgres_data:
    driver: local
