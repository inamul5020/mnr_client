# Coolify deployment with robust Alpine build
version: '3.8'

services:
  database:
    image: postgres:15-alpine
    container_name: mnr-client-database
    restart: unless-stopped
    environment:
      POSTGRES_DB: mnr_client_intake
      POSTGRES_USER: mnr_user
      POSTGRES_PASSWORD: mnr_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mnr-network
    labels:
      - "coolify.name=mnr-client-database"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.alpine
    container_name: mnr-client-backend
    restart: unless-stopped
    expose:
      - "3001"
    environment:
      DATABASE_URL: postgresql://mnr_user:mnr_password@database:5432/mnr_client_intake
      PORT: 3001
      NODE_ENV: production
      CORS_ORIGIN: https://client.mnrlk.com
      JWT_SECRET: supersecretjwtkey
    depends_on:
      - database
    networks:
      - mnr-network
    labels:
      - "coolify.name=mnr-client-backend"
      - "coolify.port=3001"
      - "coolify.healthcheck=/health"
      - "coolify.domain=api.mnrlk.com"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.alpine-robust
    container_name: mnr-client-frontend
    restart: unless-stopped
    expose:
      - "3000"
    environment:
      VITE_API_URL: https://api.mnrlk.com
    depends_on:
      - backend
    networks:
      - mnr-network
    labels:
      - "coolify.name=mnr-client-frontend"
      - "coolify.port=3000"
      - "coolify.domain=client.mnrlk.com"

volumes:
  postgres_data:

networks:
  mnr-network:
    driver: bridge
